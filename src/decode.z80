; Get command
.include load_inst.z80

inst equ 0x0100


ei
im 1


; Get command start
ld hl, inst

ld a, (hl)
sub 0x61 ; get first char and subtract 61 (So a=0, b=1,etc)

ld hl, 0x200
cp 0
jr z,start_com; if first char == 0 skip loop

ld b,a
ld de , 0x0010

loop:
    add hl, de
    djnz loop ; repeat char times: add 0x10 to hl

; Compare length of comd
start_com:
push hl ;save pointer to current cmd by pushing hl

ld hl, inst
ld a,0x20
ld c,0x0

count_com:
    cp (hl) ; if char of inst == 0x20 (space character)
    jr z,done
    inc c
    inc hl ; else inc c (counter of inst) and hl (char pointer) and repeat
jr count_com

done: pop hl

cp_length_com:
ld b,(hl) ; set b to lenght of current command
ld a,c
cp b
jr z,cp_com ; if length of current cmd == length of inst

wrong_com:
    ld e, b
    add hl,de
    jr cp_length_com ;else add b to hl and compare lengths again


cp_com:
push hl
ld de, inst-1 ; safe hl and ld de with inst-1

l:inc hl
inc de ; inc hl (pointer to current cmd) and de (pointer to inst)
ld a,(de)
cp (hl)
jr nz,w ; if hl != de jump to wrong com
djnz l

inc hl
inc de

;halt
ld c,(hl)
inc hl
ld b,(hl)
ld hl,bc ; push bc  ret

;halt
jp (hl)

w:pop hl
jr wrong_com



; b: length of current comd
; c: length of inst
; hl: pointer to current comd
; de: pointer to inst

;.org 0x0100
;db "print "

org 0x02f0
db 0x05,"print"
dw print

org 0x8000
print:
    inc de
    ld a,(de)
    cp ' '
    jp z,00
    out (0x01),a
    jr print
    halt




;im 1
;ei
;halt


;arg1 equ 0x0200
;arg2 set b to value of arg2
;print:
;    ld hl,arg1
;    ld c,0x00
;
;    otir
;ret

