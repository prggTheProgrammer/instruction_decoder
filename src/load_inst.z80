.engine Uni80

BACK_SPACE equ 0x08
SPACE equ 0x20

CR equ 0x0D
NL equ 0x0A

INST equ 0x100

;ld sp,0x0400
ld hl,inst
ld c,0x01

; input and echo back
input:
    in a,(0x00) ; get terminal status
    and 0x01
    jr z,input ; if bit 0x01(available) is on read byte
in b, (c)


available:
    in a,(0x00)
    and 0x02
    jr z,available ; wait until available the same way as before
    
ld a, BACK_SPACE
cp b
jr z,delete ; if char == back space

ld a, CR
cp b
jr z,new_line ; else if char == new line

output:    out (c),b
       ld (hl), b
       inc hl ; else echo char and store char at inst


jr input

delete:     ; output back space + space
    out (c),b
    ld a,SPACE
    out (c),a
    dec hl
    jr output ; !! should not store char

new_line:
    ld a,NL
    out (c),a
    out (c),b ; output NL + CR and finish

;output command
ld de, INST
and a
sbc hl,de
ld b,l
ld hl,INST
otir

ld a,NL
out (c),a
ld a,CR
out (c),a